# Copyright (C) 2018-2021 Intel Corporation
# All rights reserved.
#
# 'recipe' for Docker to build an image of centOS 8 based
# environment for building the DAOS project.
#

# Pull base image
ARG BASE_DISTRO=centos:8
FROM $BASE_DISTRO
LABEL maintainer="daos@daos.groups.io"

# Intermittent cache-bust.  Used to reduce load on the actual CACHEBUST later.
ARG CB0

COPY ./utils/scripts/install-centos8.sh /tmp/install.sh
RUN dnf -y install dnf-plugins-core &&                            \
    dnf config-manager --save --setopt=assumeyes=True &&          \
    dnf config-manager --set-enabled powertools &&                \
    dnf install epel-release &&                                   \
    dnf config-manager --save --setopt=install_weak_deps=False && \
    chmod +x /tmp/install.sh &&                                   \
    dnf upgrade &&                                                \
    /tmp/install.sh &&                                            \
    dnf clean all &&                                              \
    rm -f /tmp/install.sh

ARG UID=1000

# Add DAOS users
RUN useradd --no-log-init --uid $UID --user-group --create-home --shell /bin/bash \
            --home /home/daos daos_server
RUN echo "daos_server:daos_server" | chpasswd
RUN useradd --no-log-init --user-group --create-home --shell /bin/bash daos_agent
RUN echo "daos_agent:daos_agent" | chpasswd

# Create directory for DAOS backend storage
RUN mkdir -p /opt/daos /mnt/daos /var/run/daos_server /var/run/daos_agent &&   \
    chown daos_server.daos_server /opt/daos /mnt/daos /var/run/daos_server &&  \
    chown daos_agent.daos_agent /var/run/daos_agent

# DPDK/SPDK needs pyelftools now
# Longer term, we should upload our RPM build of this to the public packaging
# site and install it by RPM, but for now, we'll just pip install it
USER daos_server:daos_server
RUN python3 -m pip --no-cache-dir --disable-pip-version-check install --user pyelftools

# The COPY command has a --chown option but it's not well supported so copy as
# root then run a chown command which is frustrating as the copy can take a few
# seconds.
RUN mkdir /home/daos/pre /home/daos/daos
WORKDIR /home/daos/pre
COPY --chown=daos_server:daos_server SConstruct .
COPY --chown=daos_server:daos_server site_scons site_scons
COPY --chown=daos_server:daos_server utils/build.config utils/

# Control what to build.  By default Dockerfiles build everything to allow for
# ease-of-use for users, however in CI everything is turned off and then
# selectively enabled.  Turning off any step disables all future steps.
ARG DAOS_DEPS_BUILD=yes
ARG DAOS_KEEP_BUILD=no
ARG DAOS_TARGET_TYPE=release

ARG DEPS_JOBS=1

RUN [ "$DAOS_DEPS_BUILD" != "yes" ] || \
    { scons-3 --build-deps=yes --jobs $DEPS_JOBS PREFIX=/opt/daos \
      TARGET_TYPE=$DAOS_TARGET_TYPE --deps-only && \
    ([ "$DAOS_KEEP_BUILD" != "no" ] || /bin/rm -rf build *.gz); }

# Set a label.  This is useful for searching for DAOS images, but is also used
# in github-actions to prune elements of the dockerfile below this point.
LABEL DAOS=true

WORKDIR /home/daos/daos/
COPY --chown=daos_server:daos_server VERSION LICENSE ftest.sh SConstruct .clang-format ./
COPY --chown=daos_server:daos_server site_scons site_scons
COPY --chown=daos_server:daos_server utils utils
COPY --chown=daos_server:daos_server src src

# select compiler to use
ARG COMPILER=gcc
ARG JOBS=$DEPS_JOBS
ARG DAOS_BUILD_TYPE=$DAOS_TARGET_TYPE
ARG DAOS_BUILD=$DAOS_DEPS_BUILD

# Build DAOS
RUN [ "$DAOS_BUILD" != "yes" ] || \
    { scons-3 --jobs $JOBS install PREFIX=/opt/daos COMPILER=$COMPILER \
      BUILD_TYPE=$DAOS_BUILD_TYPE TARGET_TYPE=$DAOS_TARGET_TYPE && \
    /bin/rm -rf build && go clean -cache && \
    cp -r utils/config/examples /opt/daos; }

# Set environment variables
ENV PATH=/opt/daos/bin:$PATH

# Build java and hadoop bindings
WORKDIR /home/daos/daos/src/client/java
# Set maven repo mirror
RUN mkdir -p /home/daos/.m2
RUN echo -e "<settings>\n\
        <mirrors>\n\
                <mirror>\n\
                        <id>google-maven-central</id>\n\
                        <name>GCS Maven Central mirror</name>\n\
                        <url>https://maven-central.storage-download.googleapis.com/maven2/</url>\n\
                        <mirrorOf>central</mirrorOf>\n\
                </mirror>\n\
        </mirrors>\n\
</settings>" > /home/daos/.m2/settings.xml

ARG DAOS_JAVA_BUILD=$DAOS_BUILD

RUN [ "$DAOS_JAVA_BUILD" != "yes" ] || \
    mvn clean install -T 1C -DskipITs -Dgpg.skip -Ddaos.install.path=/opt/daos
WORKDIR /home/daos

ARG DAOS_KEEP_SRC=no
# Remove local copy
RUN [ $"DAOS_KEEP_SRC" != "no" ] || rm -rf /home/daos/*
